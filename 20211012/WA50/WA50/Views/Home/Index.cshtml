@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common
@model HomeIndexViewModel

@{
    ViewData["Title"] = "Index";
}

<link href="/css/PagedList.css" rel="stylesheet" type="text/css" />

<h1>Index</h1>

<form asp-action="Index">
    <input asp-for="Filter" placeholder="Type here ..." />
    @*    <input name="filter" type="text" value="@Model.Filter"
        placeholder="Type here ..." /> *@
</form>

@{
    var ps = Model.Products;
}
<br />
@*<ul class="pagination">
        <li class="page-item">
            <a class="page-link" href="#" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        <li class="page-item"><a class="page-link" href="#">1</a></li>
        <li class="page-item"><a class="page-link" href="#">2</a></li>
        <li class="page-item"><a class="page-link" href="#">3</a></li>
        <li class="page-item">
            <a class="page-link" href="#" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>*@

@Html.PagedListPager(ps, page => Url.Action("Index", new { page }), new PagedListRenderOptions
{
    PageClasses = new string[] { "page-link" },
    UlElementClasses = new string[] { "pagination" },
    LiElementClasses = new string[] { "page-item" },
    DisplayItemSliceAndTotal = true
})

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].SupplierId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].CategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].QuantityPerUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].UnitsInStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].UnitsOnOrder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].ReorderLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Discontinued)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in ps)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SupplierId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CategoryId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuantityPerUnit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitsInStock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitsOnOrder)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReorderLevel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Discontinued)
                </td>
            </tr>
        }
    </tbody>
</table>