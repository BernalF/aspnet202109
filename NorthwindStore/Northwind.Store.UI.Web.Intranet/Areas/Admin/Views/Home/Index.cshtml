@using X.PagedList
@using X.PagedList.Mvc.Core
@model IEnumerable<Northwind.Store.Model.Order>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Customer.ContactName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OrderDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipCity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ShipCountry)
            </th>
            <th>
                Total
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer.ContactName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShipCity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShipCountry)
                </td>
                <td>
                    @item.OrderDetails.Sum(x => x.UnitPrice)
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.OrderId">Details</a> |
                </td>
            </tr>
        }
    </tbody>
</table>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))