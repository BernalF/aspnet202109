@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IEnumerable<Northwind.Store.Model.Product>

<form asp-action="Index" class="form-group row">
    <div class="col">
        <input type="search" class="form-control" name="filter" placeholder="Type Here..." value="@ViewData["filter"]">
    </div>
    <div class="col">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>

</form>

@if (Model.Count() > 0)
{
    <div class="list-group list-group-flush">
        @foreach (var p in Model)
        {
            <a asp-action="Details" asp-controller="Home" asp-route-id="@p.ProductId"
               class="list-group-item list-group-item-action">
                <div class="row align-items-center">
                    <div class="col-8">
                        <p>
                            @p.ProductName<br />
                            <small>@(p.Category?.CategoryName)</small>
                        </p>
                    </div>
                    <div class="col-2">@p.UnitPrice?.ToString("n")</div>
                    <div class="col-1">
                        <i class="bi bi-caret-right"></i>
                    </div>
                </div>
            </a>
        }
    </div>
}

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", "Home",
    new { page = page, filter = @ViewData["filter"] }),
    new PagedListRenderOptions
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
    })