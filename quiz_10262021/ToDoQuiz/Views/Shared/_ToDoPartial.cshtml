@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IEnumerable<ToDoQuiz.Models.ToDo>

<form asp-action="Index">
    <div class="form-group">
        <input type="search" class="form-control" name="filter"
               placeholder="Search filter ..." value="@ViewData["filter"]">
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Due)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Due)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", "ToDo", 
    new { page = page, filter = @ViewData["filter"] }), 
    new PagedListRenderOptions
    {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] {"page-link"}
    })